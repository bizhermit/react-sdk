"use strict";var __createBinding=this&&this.__createBinding||(Object.create?function(t,e,s,l){void 0===l&&(l=s),Object.defineProperty(t,l,{enumerable:!0,get:function(){return e[s]}})}:function(t,e,s,l){void 0===l&&(l=s),t[l]=e[s]}),__setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(t,e){Object.defineProperty(t,"default",{enumerable:!0,value:e})}:function(t,e){t.default=e}),__importStar=this&&this.__importStar||function(t){if(t&&t.__esModule)return t;var e={};if(null!=t)for(var s in t)"default"!==s&&Object.prototype.hasOwnProperty.call(t,s)&&__createBinding(e,t,s);return __setModuleDefault(e,t),e},__importDefault=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.ListViewButtonColumnStyle=exports.listViewButtonColumnClassName=void 0;const react_1=__importDefault(require("react")),string_utils_1=__importDefault(require("@bizhermit/basic-utils/dist/string-utils")),icon_1=require("../../graphics/icon"),style_1=__importStar(require("../../layouts/style")),dom_utils_1=require("../../utils/dom-utils");exports.listViewButtonColumnClassName="bh-lv_c-btn";const ListViewButtonColumn=t=>({...t,width:null==t.iconImage||string_utils_1.default.isNotNullOrEmpty(t.buttonLabel)?t.width:-1,sort:!1,resize:t.resize??!1,cellTextAlign:t.cellTextAlign??"center",initialize:()=>{const e=document.createElement("div");if(e.classList.add(`${exports.listViewButtonColumnClassName}-wrap`),null!=t.iconImage){const s=document.createElement("div");s.classList.add(icon_1.iconClassName,`${icon_1.iconClassName}-${t.iconImage}`,`${exports.listViewButtonColumnClassName}-icon`);const l=null==t.iconSize?.8*(0,style_1.cssParamsSize)()+"px":`${t.iconSize}px`;(0,dom_utils_1.setStyleProps)(s,{height:l,width:l,maxHeight:style_1.CssVar.size,maxWidth:style_1.CssVar.size}),s.innerHTML="<div></div>".repeat((0,icon_1.iconChildCount)(t.iconImage)),e.appendChild(s)}const s=document.createElement("div");return s.classList.add(`${exports.listViewButtonColumnClassName}-lbl`),{elem:e,lblElem:s}},cellInitialize:(e,s)=>{e.element.classList.add(exports.listViewButtonColumnClassName);const l=(0,dom_utils_1.cloneElement)(s.elem);if(string_utils_1.default.isNotNullOrEmpty(t.buttonLabel)){const e=(0,dom_utils_1.cloneElement)(s.lblElem);e.textContent=t.buttonLabel,l.appendChild(e)}e.contentElements.push(l),e.element.appendChild(l)},cellRender:null==t.valid||!0===t.disabled?null:e=>{const s=t.valid(e.row.item.data);e.element.setAttribute("data-disabled",String(!("boolean"==typeof s?s:!0===s.valid)))},clickedCell:(e,s)=>{if(!0!==t.disabled&&null!=t.clickedCell){if(t.valid){const s=t.valid(e.data);if("boolean"==typeof s){if(!0!==s)return}else if(!0!==s.valid)return}return t.clickedCell(e,s)}},jsxStyle:exports.ListViewButtonColumnStyle});exports.default=ListViewButtonColumn,exports.ListViewButtonColumnStyle=react_1.default.createElement(style_1.default,{id:exports.listViewButtonColumnClassName,notDepsColor:!0,css:({design:t})=>`\n.${exports.listViewButtonColumnClassName}-wrap {\n  ${style_1.CssPV.flex_r_c}\n  ${style_1.CssPV.fill}\n}\n.${exports.listViewButtonColumnClassName}-lbl {\n  box-sizing: border-box;\n  flex: 1;\n  display: block;\n  text-align: center;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  padding: 1px 5px 0px 5px;\n}\n.${exports.listViewButtonColumnClassName}-icon + .${exports.listViewButtonColumnClassName}-lbl {\n  padding-left: 0px;\n}\n.${exports.listViewButtonColumnClassName}[data-disabled="false"] {\n  cursor: pointer;\n}\n.${exports.listViewButtonColumnClassName}[data-disabled="true"] > .${exports.listViewButtonColumnClassName}-wrap {\n  opacity: 0.5;\n}\n${"material"===t?`\n.${exports.listViewButtonColumnClassName} {\n  padding: calc(${style_1.CssParam.m.updownMargin} / 2);\n}\n.${exports.listViewButtonColumnClassName}-wrap {\n  border: 1px solid ${style_1.CssVar.bdc};\n  border-radius: ${style_1.CssParam.m.r};\n  box-shadow: ${style_1.CssParam.m.sdBtm};\n}\n.${exports.listViewButtonColumnClassName}[data-disabled="false"]:hover > .${exports.listViewButtonColumnClassName}-wrap {\n  margin-top: calc(${style_1.CssParam.m.updownMargin} * -0.5);\n  margin-bottom: calc(${style_1.CssParam.m.updownMargin} * 0.5);\n  box-shadow: ${style_1.CssParam.m.sdBtm_f};\n}\n.${exports.listViewButtonColumnClassName}[data-disabled="false"]:hover:active > .${exports.listViewButtonColumnClassName}-wrap {\n  margin-top: calc(${style_1.CssParam.m.updownMargin} * 0.5);\n  margin-bottom: calc(${style_1.CssParam.m.updownMargin} * -0.5);\n  box-shadow: none;\n}\n`:""}\n${"neumorphism"===t?`\n.${exports.listViewButtonColumnClassName} {\n  padding: ${style_1.CssParam.n.ccvSdPdd};\n}\n.${exports.listViewButtonColumnClassName}-wrap {\n  padding: 0px ${style_1.CssParam.n.ccvSdPdd};\n  box-shadow: ${style_1.CssParam.n.border.cvxSd};\n  border-radius: ${style_1.CssParam.n.r};\n}\n.${exports.listViewButtonColumnClassName}[data-disabled="false"]:hover > .${exports.listViewButtonColumnClassName}-wrap {\n  box-shadow: ${style_1.CssParam.n.cvxSd};\n}\n.${exports.listViewButtonColumnClassName}[data-disabled="false"]:hover:active > .${exports.listViewButtonColumnClassName}-wrap {\n  padding-top: 2px;\n  box-shadow: ${style_1.CssParam.n.ccvSd};\n}\n`:""}\n`});
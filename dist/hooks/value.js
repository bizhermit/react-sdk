"use strict";var __importDefault=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.joinTitle=void 0;const string_utils_1=__importDefault(require("@bizhermit/basic-utils/dist/string-utils")),react_1=require("react"),useValue=(t,e)=>{const r=(0,react_1.useRef)({value:t.bind?.[t.name]??e?.defaultValue??t.defaultValue??e?.nullValue,title:t.title,status:"",props:t,options:e}),[u,n]=(0,react_1.useState)(r.current.value),[s,a]=(0,react_1.useState)(r.current.title),[i,l]=(0,react_1.useState)(r.current.status);r.current.props=t,r.current.options=e;const c=(0,react_1.useCallback)((t=>{const e=t??r.current.options?.nullValue,u=r.current.props.validation?.(e);if(null==u)a(r.current.title=(0,exports.joinTitle)(r.current.props.title,"")),l(r.current.status="");else if(string_utils_1.default.isString(u))a(r.current.title=(0,exports.joinTitle)(r.current.props.title,u)),l(r.current.status=string_utils_1.default.isEmpty(u)?"":"err");else{const t=u;if(a(r.current.title=(0,exports.joinTitle)(r.current.props.title,t.title)),l(r.current.status=t.status??""),!1===t.commit)return}const s=r.current.value;return n(r.current.value=e),r.current.props.bind&&(r.current.props.bind[r.current.props.name]=e),r.current.options?.changed?.(e),r.current.options?.convertChangedArgData?r.current.props.changed?.(r.current.options.convertChangedArgData(e),r.current.options.convertChangedArgData(s)):r.current.props.changed?.(e,s),e}),[]);return(0,react_1.useEffect)((()=>{const r=c(t.bind?.[t.name]??e?.defaultValue??t.defaultValue);e?.binded?.(r)}),[t.bind]),{value:u,getValue:(0,react_1.useCallback)((()=>r.current.value),[]),setValue:c,title:s,getTitle:(0,react_1.useCallback)((()=>r.current.title),[]),status:i,getStatus:(0,react_1.useCallback)((()=>r.current.status),[])}};exports.default=useValue;const joinTitle=(t,...e)=>{if(e){let r=t??"";return e.forEach((t=>{string_utils_1.default.isEmpty(t)||(r.length>0&&(r+="\n"),r+=t)})),r}return t};exports.joinTitle=joinTitle;